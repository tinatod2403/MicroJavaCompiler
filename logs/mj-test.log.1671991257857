INFO  18:58:28,360 - Compiling source file: C:\Users\krist\Documents\1. SEMESTAR\PP1\projekat\Projekat22_23\workspace\MJCompiler\test\program.mj
INFO  18:58:28,527 - #2 program
INFO  18:58:28,527 - #18 p
INFO  18:58:28,527 - #14 const
INFO  18:58:28,532 - #18 int
INFO  18:58:28,532 - #18 size
INFO  18:58:28,533 - #12 =
INFO  18:58:28,534 - #15 10
INFO  18:58:28,534 - #5 ;
INFO  18:58:28,534 - #18 int
INFO  18:58:28,536 - #18 size
INFO  18:58:28,536 - #21 [
INFO  18:58:28,536 - #22 ]
INFO  18:58:28,536 - #5 ;
INFO  18:58:28,542 - #24 class
INFO  18:58:28,544 - #18 Table
INFO  18:58:28,544 - #3 {
INFO  18:58:28,548 - #18 int
INFO  18:58:28,550 - #18 pos
INFO  18:58:28,550 - #21 [
INFO  18:58:28,551 - #22 ]
INFO  18:58:28,562 - #8 ,
INFO  18:58:28,562 - #18 neg
INFO  18:58:28,562 - #21 [
INFO  18:58:28,562 - #22 ]
INFO  18:58:28,562 - #8 ,
INFO  18:58:28,563 - #18 factor
INFO  18:58:28,563 - #5 ;
INFO  18:58:28,565 - #3 {
INFO  18:58:28,566 - #18 int
INFO  18:58:28,568 - #18 Table
INFO  18:58:28,568 - #6 (
INFO  18:58:28,568 - #18 int
INFO  18:58:28,568 - #18 factor
INFO  18:58:28,568 - #7 )
INFO  18:58:28,570 - #3 {
INFO  18:58:28,570 - #18 this
INFO  18:58:28,572 - #35 .
INFO  18:58:28,572 - #18 factor
INFO  18:58:28,572 - #12 =
INFO  18:58:28,572 - #18 factor
INFO  18:58:28,574 - #5 ;
INFO  18:58:28,574 - #4 }
INFO  18:58:28,574 - #13 void
INFO  18:58:28,577 - #18 putp
INFO  18:58:28,577 - #6 (
INFO  18:58:28,577 - #18 int
INFO  18:58:28,577 - #18 a
INFO  18:58:28,577 - #8 ,
INFO  18:58:28,577 - #18 int
INFO  18:58:28,577 - #18 idx
INFO  18:58:28,577 - #7 )
INFO  18:58:28,577 - #3 {
INFO  18:58:28,578 - #18 this
INFO  18:58:28,578 - #35 .
INFO  18:58:28,578 - #18 pos
INFO  18:58:28,578 - #21 [
INFO  18:58:28,578 - #18 idx
INFO  18:58:28,578 - #22 ]
INFO  18:58:28,578 - #12 =
INFO  18:58:28,578 - #18 a
INFO  18:58:28,578 - #5 ;
INFO  18:58:28,579 - #4 }
INFO  18:58:28,579 - #13 void
INFO  18:58:28,579 - #18 putn
INFO  18:58:28,579 - #6 (
INFO  18:58:28,579 - #18 int
INFO  18:58:28,579 - #18 a
INFO  18:58:28,579 - #8 ,
INFO  18:58:28,579 - #18 int
INFO  18:58:28,579 - #18 idx
INFO  18:58:28,579 - #7 )
INFO  18:58:28,579 - #3 {
INFO  18:58:28,579 - #18 this
INFO  18:58:28,579 - #35 .
INFO  18:58:28,579 - #18 neg
INFO  18:58:28,579 - #21 [
INFO  18:58:28,579 - #18 idx
INFO  18:58:28,579 - #22 ]
INFO  18:58:28,579 - #12 =
INFO  18:58:28,579 - #18 a
INFO  18:58:28,580 - #5 ;
INFO  18:58:28,580 - #4 }
INFO  18:58:28,580 - #18 int
INFO  18:58:28,580 - #18 getp
INFO  18:58:28,580 - #6 (
INFO  18:58:28,580 - #18 int
INFO  18:58:28,580 - #18 idx
INFO  18:58:28,580 - #7 )
INFO  18:58:28,580 - #3 {
INFO  18:58:28,580 - #10 return
INFO  18:58:28,580 - #18 pos
INFO  18:58:28,580 - #21 [
INFO  18:58:28,580 - #18 idx
INFO  18:58:28,580 - #22 ]
INFO  18:58:28,580 - #5 ;
INFO  18:58:28,581 - #4 }
INFO  18:58:28,581 - #18 int
INFO  18:58:28,581 - #18 getn
INFO  18:58:28,581 - #6 (
INFO  18:58:28,581 - #18 int
INFO  18:58:28,581 - #18 idx
INFO  18:58:28,581 - #7 )
INFO  18:58:28,581 - #3 {
INFO  18:58:28,581 - #10 return
INFO  18:58:28,582 - #18 neg
INFO  18:58:28,582 - #21 [
INFO  18:58:28,582 - #18 idx
INFO  18:58:28,582 - #22 ]
INFO  18:58:28,582 - #5 ;
INFO  18:58:28,582 - #4 }
INFO  18:58:28,582 - #4 }
INFO  18:58:28,582 - #4 }
INFO  18:58:28,582 - #18 Table
INFO  18:58:28,583 - #18 val
INFO  18:58:28,584 - #5 ;
INFO  18:58:28,584 - #18 Int
INFO  18:58:28,584 - #18 rows
INFO  18:58:28,584 - #8 ,
INFO  18:58:28,584 - #18 columns
INFO  18:58:28,584 - #5 ;
INFO  18:58:28,584 - #3 {
INFO  18:58:28,584 - #13 void
INFO  18:58:28,584 - #18 f
INFO  18:58:28,584 - #6 (
INFO  18:58:28,584 - #18 char
INFO  18:58:28,584 - #18 ch
INFO  18:58:28,584 - #8 ,
INFO  18:58:28,584 - #18 int
INFO  18:58:28,585 - #18 a
INFO  18:58:28,585 - #8 ,
INFO  18:58:28,585 - #18 int
INFO  18:58:28,585 - #18 arg
INFO  18:58:28,585 - #7 )
INFO  18:58:28,585 - #18 int
INFO  18:58:28,585 - #18 x
INFO  18:58:28,585 - #5 ;
INFO  18:58:28,585 - #3 {
INFO  18:58:28,585 - #18 x
INFO  18:58:28,585 - #12 =
INFO  18:58:28,585 - #18 arg
INFO  18:58:28,585 - #5 ;
INFO  18:58:28,585 - #4 }
INFO  18:58:28,585 - #13 void
INFO  18:58:28,586 - #18 main
INFO  18:58:28,586 - #6 (
INFO  18:58:28,586 - #7 )
INFO  18:58:28,587 - #18 int
INFO  18:58:28,587 - #18 x
INFO  18:58:28,587 - #8 ,
INFO  18:58:28,587 - #18 i
INFO  18:58:28,587 - #5 ;
INFO  18:58:28,587 - #18 char
INFO  18:58:28,587 - #18 c
INFO  18:58:28,587 - #5 ;
INFO  18:58:28,587 - #18 int
INFO  18:58:28,587 - #18 arr
INFO  18:58:28,587 - #21 [
INFO  18:58:28,587 - #22 ]
INFO  18:58:28,587 - #5 ;
INFO  18:58:28,587 - #3 {
INFO  18:58:28,587 - #18 val
INFO  18:58:28,587 - #12 =
INFO  18:58:28,589 - #38 new
INFO  18:58:28,589 - #18 Table
INFO  18:58:28,589 - #6 (
INFO  18:58:28,589 - #15 2
INFO  18:58:28,589 - #7 )
INFO  18:58:28,589 - #5 ;
INFO  18:58:28,589 - #18 arr
INFO  18:58:28,589 - #12 =
INFO  18:58:28,589 - #38 new
INFO  18:58:28,589 - #18 int
INFO  18:58:28,589 - #21 [
INFO  18:58:28,589 - #15 3
INFO  18:58:28,589 - #22 ]
INFO  18:58:28,589 - #5 ;
INFO  18:58:28,589 - #18 i
INFO  18:58:28,589 - #12 =
INFO  18:58:28,589 - #15 0
INFO  18:58:28,589 - #5 ;
INFO  18:58:28,589 - #41 while
INFO  18:58:28,589 - #6 (
INFO  18:58:28,589 - #18 i
INFO  18:58:28,589 - #33 <
INFO  18:58:28,589 - #15 3
INFO  18:58:28,592 - #7 )
INFO  18:58:28,592 - #3 {
INFO  18:58:28,592 - #18 arr
INFO  18:58:28,592 - #21 [
INFO  18:58:28,592 - #18 i
INFO  18:58:28,592 - #22 ]
INFO  18:58:28,593 - #12 =
INFO  18:58:28,593 - #18 i
INFO  18:58:28,593 - #5 ;
INFO  18:58:28,593 - #18 i
INFO  18:58:28,593 - #39 ++
INFO  18:58:28,593 - #5 ;
INFO  18:58:28,597 - #4 }
INFO  18:58:28,597 - #18 arr
INFO  18:58:28,597 - #35 .
INFO  18:58:28,597 - #43 foreach
INFO  18:58:28,597 - #6 (
INFO  18:58:28,597 - #18 x
INFO  18:58:28,597 - #42 =>
INFO  18:58:28,597 - #9 print
INFO  18:58:28,597 - #6 (
INFO  18:58:28,597 - #18 x
INFO  18:58:28,597 - #7 )
INFO  18:58:28,597 - #5 ;
INFO  18:58:28,597 - #7 )
INFO  18:58:28,597 - #5 ;
INFO  18:58:28,597 - #18 val
INFO  18:58:28,597 - #35 .
INFO  18:58:28,597 - #18 pos
INFO  18:58:28,597 - #12 =
INFO  18:58:28,597 - #38 new
INFO  18:58:28,597 - #18 int
INFO  18:58:28,597 - #21 [
INFO  18:58:28,597 - #18 size
INFO  18:58:28,597 - #22 ]
INFO  18:58:28,597 - #5 ;
INFO  18:58:28,597 - #18 val
INFO  18:58:28,597 - #35 .
INFO  18:58:28,597 - #18 neg
INFO  18:58:28,597 - #12 =
INFO  18:58:28,597 - #38 new
INFO  18:58:28,597 - #18 int
INFO  18:58:28,597 - #21 [
INFO  18:58:28,597 - #18 size
INFO  18:58:28,597 - #22 ]
INFO  18:58:28,597 - #5 ;
INFO  18:58:28,597 - #44 read
INFO  18:58:28,597 - #6 (
INFO  18:58:28,597 - #18 x
INFO  18:58:28,598 - #7 )
INFO  18:58:28,598 - #5 ;
INFO  18:58:28,598 - #21 [
INFO  18:58:28,598 - #18 i
INFO  18:58:28,598 - #8 ,
INFO  18:58:28,598 - #8 ,
INFO  18:58:28,600 - #18 x
INFO  18:58:28,600 - #22 ]
INFO  18:58:28,600 - #12 =
INFO  18:58:28,600 - #18 arr
INFO  18:58:28,600 - #5 ;
INFO  18:58:28,600 - #41 while
INFO  18:58:28,600 - #6 (
INFO  18:58:28,600 - #18 i
INFO  18:58:28,600 - #33 <
INFO  18:58:28,600 - #18 size
INFO  18:58:28,600 - #7 )
INFO  18:58:28,600 - #3 {
INFO  18:58:28,600 - #18 val
INFO  18:58:28,600 - #35 .
INFO  18:58:28,600 - #18 putp
INFO  18:58:28,600 - #6 (
INFO  18:58:28,600 - #15 0
INFO  18:58:28,600 - #8 ,
INFO  18:58:28,600 - #18 i
INFO  18:58:28,600 - #7 )
INFO  18:58:28,600 - #5 ;
INFO  18:58:28,600 - #18 val
INFO  18:58:28,601 - #35 .
INFO  18:58:28,601 - #18 putn
INFO  18:58:28,601 - #6 (
INFO  18:58:28,601 - #15 0
INFO  18:58:28,601 - #8 ,
INFO  18:58:28,601 - #18 i
INFO  18:58:28,601 - #7 )
INFO  18:58:28,601 - #5 ;
INFO  18:58:28,601 - #18 i
INFO  18:58:28,601 - #39 ++
INFO  18:58:28,601 - #5 ;
INFO  18:58:28,601 - #4 }
INFO  18:58:28,601 - #18 f
INFO  18:58:28,601 - #6 (
INFO  18:58:28,601 - #18 c
INFO  18:58:28,601 - #8 ,
INFO  18:58:28,601 - #18 x
INFO  18:58:28,601 - #8 ,
INFO  18:58:28,601 - #18 i
INFO  18:58:28,601 - #7 )
INFO  18:58:28,601 - #5 ;
INFO  18:58:28,601 - #44 read
INFO  18:58:28,601 - #6 (
INFO  18:58:28,601 - #18 rows
INFO  18:58:28,601 - #7 )
INFO  18:58:28,601 - #5 ;
INFO  18:58:28,601 - #18 x
INFO  18:58:28,601 - #12 =
INFO  18:58:28,601 - #18 rows
INFO  18:58:28,601 - #5 ;
INFO  18:58:28,601 - #41 while
INFO  18:58:28,601 - #6 (
INFO  18:58:28,601 - #17 true
INFO  18:58:28,601 - #7 )
INFO  18:58:28,603 - #3 {
INFO  18:58:28,603 - #19 if
INFO  18:58:28,603 - #6 (
INFO  18:58:28,603 - #15 0
INFO  18:58:28,603 - #34 <=
INFO  18:58:28,603 - #18 x
INFO  18:58:28,603 - #36 &&
INFO  18:58:28,604 - #18 x
INFO  18:58:28,604 - #33 <
INFO  18:58:28,604 - #18 size
INFO  18:58:28,604 - #7 )
INFO  18:58:28,604 - #3 {
INFO  18:58:28,604 - #19 if
INFO  18:58:28,604 - #6 (
INFO  18:58:28,604 - #18 x
INFO  18:58:28,604 - #34 <=
INFO  18:58:28,604 - #15 0
INFO  18:58:28,604 - #7 )
INFO  18:58:28,604 - #45 break
INFO  18:58:28,604 - #5 ;
INFO  18:58:28,604 - #18 val
INFO  18:58:28,605 - #35 .
INFO  18:58:28,606 - #18 putp
INFO  18:58:28,606 - #6 (
INFO  18:58:28,606 - #18 val
INFO  18:58:28,606 - #35 .
INFO  18:58:28,606 - #18 getp
INFO  18:58:28,606 - #6 (
INFO  18:58:28,606 - #18 x
INFO  18:58:28,606 - #7 )
INFO  18:58:28,606 - #11 +
INFO  18:58:28,606 - #15 1
INFO  18:58:28,609 - #7 )
INFO  18:58:28,609 - #5 ;
INFO  18:58:28,609 - #4 }
INFO  18:58:28,609 - #20 else
INFO  18:58:28,609 - #19 if
INFO  18:58:28,609 - #6 (
INFO  18:58:28,609 - #18 size
INFO  18:58:28,609 - #33 <
INFO  18:58:28,609 - #18 x
INFO  18:58:28,609 - #36 &&
INFO  18:58:28,609 - #18 x
INFO  18:58:28,609 - #33 <
INFO  18:58:28,609 - #15 0
INFO  18:58:28,609 - #7 )
INFO  18:58:28,609 - #3 {
INFO  18:58:28,609 - #18 val
INFO  18:58:28,609 - #35 .
INFO  18:58:28,609 - #18 putn
INFO  18:58:28,609 - #6 (
INFO  18:58:28,609 - #18 val
INFO  18:58:28,609 - #35 .
INFO  18:58:28,609 - #18 getn
INFO  18:58:28,609 - #6 (
INFO  18:58:28,609 - #25 -
INFO  18:58:28,609 - #18 x
INFO  18:58:28,609 - #7 )
INFO  18:58:28,610 - #11 +
INFO  18:58:28,610 - #15 1
INFO  18:58:28,610 - #7 )
INFO  18:58:28,610 - #5 ;
INFO  18:58:28,610 - #4 }
INFO  18:58:28,610 - #44 read
INFO  18:58:28,610 - #6 (
INFO  18:58:28,610 - #18 x
INFO  18:58:28,610 - #7 )
INFO  18:58:28,610 - #5 ;
INFO  18:58:28,610 - #4 }
INFO  18:58:28,610 - #4 }
INFO  18:58:28,610 - #4 }
