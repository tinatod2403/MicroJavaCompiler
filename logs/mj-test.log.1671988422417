INFO  18:06:01,906 - Compiling source file: C:\Users\krist\Documents\1. SEMESTAR\PP1\projekat\Projekat22_23\workspace\MJCompiler\test\program.mj
INFO  18:06:01,972 - #2 program
INFO  18:06:01,972 - #18 p
INFO  18:06:01,973 - #14 const
INFO  18:06:01,974 - #18 int
INFO  18:06:01,974 - #18 size
INFO  18:06:01,975 - #12 =
INFO  18:06:01,975 - #15 10
INFO  18:06:01,975 - #5 ;
INFO  18:06:01,976 - #18 int
INFO  18:06:01,976 - #18 size
INFO  18:06:01,977 - #21 [
INFO  18:06:01,977 - #22 ]
INFO  18:06:01,977 - #5 ;
INFO  18:06:01,979 - #24 class
INFO  18:06:01,980 - #18 Table
INFO  18:06:01,980 - #3 {
INFO  18:06:01,982 - #18 int
INFO  18:06:01,982 - #18 pos
INFO  18:06:01,983 - #21 [
INFO  18:06:01,983 - #22 ]
INFO  18:06:01,994 - #8 ,
INFO  18:06:01,994 - #18 neg
INFO  18:06:01,994 - #21 [
INFO  18:06:01,994 - #22 ]
INFO  18:06:01,994 - #8 ,
INFO  18:06:01,994 - #18 factor
INFO  18:06:01,994 - #5 ;
INFO  18:06:01,995 - #3 {
INFO  18:06:01,995 - #18 int
INFO  18:06:01,996 - #18 Table
INFO  18:06:01,996 - #6 (
INFO  18:06:01,996 - #18 int
INFO  18:06:01,996 - #18 factor
INFO  18:06:01,996 - #7 )
INFO  18:06:01,997 - #3 {
INFO  18:06:01,998 - #18 this
INFO  18:06:01,999 - #35 .
INFO  18:06:01,999 - #18 factor
INFO  18:06:01,999 - #12 =
INFO  18:06:01,999 - #18 factor
INFO  18:06:02,000 - #5 ;
INFO  18:06:02,001 - #4 }
INFO  18:06:02,001 - #13 void
INFO  18:06:02,002 - #18 putp
INFO  18:06:02,002 - #6 (
INFO  18:06:02,002 - #18 int
INFO  18:06:02,002 - #18 a
INFO  18:06:02,002 - #8 ,
INFO  18:06:02,003 - #18 int
INFO  18:06:02,003 - #18 idx
INFO  18:06:02,003 - #7 )
INFO  18:06:02,003 - #3 {
INFO  18:06:02,003 - #18 this
INFO  18:06:02,003 - #35 .
INFO  18:06:02,003 - #18 pos
INFO  18:06:02,003 - #21 [
INFO  18:06:02,003 - #18 idx
INFO  18:06:02,003 - #22 ]
INFO  18:06:02,003 - #12 =
INFO  18:06:02,003 - #18 a
INFO  18:06:02,004 - #5 ;
INFO  18:06:02,004 - #4 }
INFO  18:06:02,004 - #13 void
INFO  18:06:02,004 - #18 putn
INFO  18:06:02,004 - #6 (
INFO  18:06:02,004 - #18 int
INFO  18:06:02,004 - #18 a
INFO  18:06:02,004 - #8 ,
INFO  18:06:02,004 - #18 int
INFO  18:06:02,004 - #18 idx
INFO  18:06:02,004 - #7 )
INFO  18:06:02,004 - #3 {
INFO  18:06:02,005 - #18 this
INFO  18:06:02,005 - #35 .
INFO  18:06:02,005 - #18 neg
INFO  18:06:02,005 - #21 [
INFO  18:06:02,005 - #18 idx
INFO  18:06:02,005 - #22 ]
INFO  18:06:02,005 - #12 =
INFO  18:06:02,005 - #18 a
INFO  18:06:02,005 - #5 ;
INFO  18:06:02,005 - #4 }
INFO  18:06:02,005 - #18 int
INFO  18:06:02,005 - #18 getp
INFO  18:06:02,005 - #6 (
INFO  18:06:02,005 - #18 int
INFO  18:06:02,006 - #18 idx
INFO  18:06:02,006 - #7 )
INFO  18:06:02,006 - #3 {
INFO  18:06:02,006 - #10 return
INFO  18:06:02,006 - #18 pos
INFO  18:06:02,006 - #21 [
INFO  18:06:02,006 - #18 idx
INFO  18:06:02,006 - #22 ]
INFO  18:06:02,006 - #5 ;
INFO  18:06:02,006 - #4 }
INFO  18:06:02,007 - #18 int
INFO  18:06:02,007 - #18 getn
INFO  18:06:02,007 - #6 (
INFO  18:06:02,007 - #18 int
INFO  18:06:02,007 - #18 idx
INFO  18:06:02,008 - #7 )
INFO  18:06:02,008 - #3 {
INFO  18:06:02,008 - #10 return
INFO  18:06:02,008 - #18 neg
INFO  18:06:02,008 - #21 [
INFO  18:06:02,008 - #18 idx
INFO  18:06:02,009 - #22 ]
INFO  18:06:02,009 - #5 ;
INFO  18:06:02,009 - #4 }
INFO  18:06:02,009 - #4 }
INFO  18:06:02,009 - #4 }
INFO  18:06:02,009 - #18 Table
INFO  18:06:02,011 - #18 val
INFO  18:06:02,011 - #5 ;
INFO  18:06:02,011 - #18 Int
INFO  18:06:02,011 - #18 rows
INFO  18:06:02,011 - #8 ,
INFO  18:06:02,011 - #18 columns
INFO  18:06:02,011 - #5 ;
INFO  18:06:02,012 - #3 {
INFO  18:06:02,012 - #13 void
INFO  18:06:02,012 - #18 f
INFO  18:06:02,012 - #6 (
INFO  18:06:02,012 - #18 char
INFO  18:06:02,012 - #18 ch
INFO  18:06:02,012 - #8 ,
INFO  18:06:02,013 - #18 int
INFO  18:06:02,013 - #18 a
INFO  18:06:02,014 - #8 ,
INFO  18:06:02,014 - #18 int
INFO  18:06:02,014 - #18 arg
INFO  18:06:02,014 - #7 )
INFO  18:06:02,014 - #18 int
INFO  18:06:02,014 - #18 x
INFO  18:06:02,014 - #5 ;
INFO  18:06:02,014 - #3 {
INFO  18:06:02,014 - #18 x
INFO  18:06:02,014 - #12 =
INFO  18:06:02,015 - #18 arg
INFO  18:06:02,015 - #5 ;
INFO  18:06:02,015 - #4 }
INFO  18:06:02,015 - #13 void
INFO  18:06:02,015 - #18 main
INFO  18:06:02,015 - #6 (
INFO  18:06:02,015 - #7 )
INFO  18:06:02,016 - #18 int
INFO  18:06:02,016 - #18 x
INFO  18:06:02,016 - #8 ,
INFO  18:06:02,016 - #18 i
INFO  18:06:02,016 - #5 ;
INFO  18:06:02,016 - #18 char
INFO  18:06:02,016 - #18 c
INFO  18:06:02,016 - #5 ;
INFO  18:06:02,016 - #18 int
INFO  18:06:02,016 - #18 arr
INFO  18:06:02,016 - #21 [
INFO  18:06:02,016 - #22 ]
INFO  18:06:02,016 - #5 ;
INFO  18:06:02,017 - #3 {
INFO  18:06:02,017 - #18 val
INFO  18:06:02,017 - #12 =
INFO  18:06:02,017 - #38 new
INFO  18:06:02,017 - #18 Table
INFO  18:06:02,017 - #6 (
INFO  18:06:02,017 - #15 2
INFO  18:06:02,017 - #7 )
INFO  18:06:02,017 - #5 ;
INFO  18:06:02,017 - #18 arr
INFO  18:06:02,017 - #12 =
INFO  18:06:02,017 - #38 new
INFO  18:06:02,017 - #18 int
INFO  18:06:02,017 - #21 [
INFO  18:06:02,017 - #15 3
INFO  18:06:02,017 - #22 ]
INFO  18:06:02,018 - #5 ;
INFO  18:06:02,018 - #18 i
INFO  18:06:02,018 - #12 =
INFO  18:06:02,018 - #15 0
INFO  18:06:02,018 - #5 ;
INFO  18:06:02,018 - #41 while
INFO  18:06:02,018 - #6 (
INFO  18:06:02,018 - #18 i
INFO  18:06:02,018 - #33 <
INFO  18:06:02,018 - #15 3
INFO  18:06:02,019 - #7 )
INFO  18:06:02,020 - #3 {
INFO  18:06:02,020 - #18 arr
INFO  18:06:02,020 - #21 [
INFO  18:06:02,020 - #18 i
INFO  18:06:02,020 - #22 ]
INFO  18:06:02,020 - #12 =
INFO  18:06:02,021 - #18 i
INFO  18:06:02,021 - #5 ;
INFO  18:06:02,021 - #18 i
INFO  18:06:02,022 - #39 ++
INFO  18:06:02,022 - #5 ;
INFO  18:06:02,023 - #4 }
INFO  18:06:02,023 - #18 arr
INFO  18:06:02,024 - #35 .
INFO  18:06:02,024 - #43 foreach
INFO  18:06:02,024 - #6 (
INFO  18:06:02,024 - #18 x
INFO  18:06:02,024 - #42 =>
INFO  18:06:02,024 - #9 print
INFO  18:06:02,024 - #6 (
INFO  18:06:02,024 - #18 x
INFO  18:06:02,024 - #7 )
INFO  18:06:02,024 - #5 ;
INFO  18:06:02,024 - #7 )
INFO  18:06:02,024 - #5 ;
INFO  18:06:02,024 - #18 val
INFO  18:06:02,024 - #35 .
INFO  18:06:02,024 - #18 pos
INFO  18:06:02,024 - #12 =
INFO  18:06:02,024 - #38 new
INFO  18:06:02,024 - #18 int
INFO  18:06:02,024 - #21 [
INFO  18:06:02,025 - #18 size
INFO  18:06:02,025 - #22 ]
INFO  18:06:02,025 - #5 ;
INFO  18:06:02,025 - #18 val
INFO  18:06:02,025 - #35 .
INFO  18:06:02,025 - #18 neg
INFO  18:06:02,025 - #12 =
INFO  18:06:02,025 - #38 new
INFO  18:06:02,025 - #18 int
INFO  18:06:02,025 - #21 [
INFO  18:06:02,025 - #18 size
INFO  18:06:02,025 - #22 ]
INFO  18:06:02,025 - #5 ;
INFO  18:06:02,025 - #44 read
INFO  18:06:02,025 - #6 (
INFO  18:06:02,025 - #18 x
INFO  18:06:02,025 - #7 )
INFO  18:06:02,025 - #5 ;
INFO  18:06:02,025 - #21 [
INFO  18:06:02,025 - #18 i
INFO  18:06:02,025 - #8 ,
INFO  18:06:02,026 - #8 ,
INFO  18:06:02,026 - #18 x
INFO  18:06:02,026 - #22 ]
INFO  18:06:02,027 - #12 =
INFO  18:06:02,027 - #18 arr
INFO  18:06:02,027 - #5 ;
INFO  18:06:02,027 - #41 while
INFO  18:06:02,027 - #6 (
INFO  18:06:02,027 - #18 i
INFO  18:06:02,027 - #33 <
INFO  18:06:02,027 - #18 size
INFO  18:06:02,027 - #7 )
INFO  18:06:02,027 - #3 {
INFO  18:06:02,027 - #18 val
INFO  18:06:02,027 - #35 .
INFO  18:06:02,027 - #18 putp
INFO  18:06:02,027 - #6 (
INFO  18:06:02,027 - #15 0
INFO  18:06:02,027 - #8 ,
INFO  18:06:02,027 - #18 i
INFO  18:06:02,027 - #7 )
INFO  18:06:02,027 - #5 ;
INFO  18:06:02,027 - #18 val
INFO  18:06:02,028 - #35 .
INFO  18:06:02,028 - #18 putn
INFO  18:06:02,028 - #6 (
INFO  18:06:02,028 - #15 0
INFO  18:06:02,028 - #8 ,
INFO  18:06:02,028 - #18 i
INFO  18:06:02,028 - #7 )
INFO  18:06:02,028 - #5 ;
INFO  18:06:02,028 - #18 i
INFO  18:06:02,028 - #39 ++
INFO  18:06:02,028 - #5 ;
INFO  18:06:02,028 - #4 }
INFO  18:06:02,028 - #18 f
INFO  18:06:02,028 - #6 (
INFO  18:06:02,028 - #18 c
INFO  18:06:02,028 - #8 ,
INFO  18:06:02,028 - #18 x
INFO  18:06:02,028 - #8 ,
INFO  18:06:02,028 - #18 i
INFO  18:06:02,028 - #7 )
INFO  18:06:02,028 - #5 ;
INFO  18:06:02,028 - #44 read
INFO  18:06:02,028 - #6 (
INFO  18:06:02,028 - #18 rows
INFO  18:06:02,028 - #7 )
INFO  18:06:02,028 - #5 ;
INFO  18:06:02,028 - #18 x
INFO  18:06:02,028 - #12 =
INFO  18:06:02,028 - #18 rows
INFO  18:06:02,028 - #5 ;
INFO  18:06:02,028 - #41 while
INFO  18:06:02,028 - #6 (
INFO  18:06:02,029 - #17 true
INFO  18:06:02,029 - #7 )
INFO  18:06:02,029 - #3 {
INFO  18:06:02,029 - #45 break
INFO  18:06:02,029 - #5 ;
INFO  18:06:02,029 - #46 continue
INFO  18:06:02,031 - #5 ;
INFO  18:06:02,031 - #18 if
INFO  18:06:02,033 - #6 (
INFO  18:06:02,033 - #18 x
INFO  18:06:02,033 - #34 <=
ERROR 18:06:02,033 - 
Sintaksna greska na liniji 53
ERROR 18:06:02,034 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 53
