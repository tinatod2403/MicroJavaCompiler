INFO  19:00:57,861 - Compiling source file: C:\Users\krist\Documents\1. SEMESTAR\PP1\projekat\Projekat22_23\workspace\MJCompiler\test\program.mj
INFO  19:00:58,032 - #2 program
INFO  19:00:58,032 - #18 p
INFO  19:00:58,032 - #14 const
INFO  19:00:58,036 - #18 int
INFO  19:00:58,036 - #18 size
INFO  19:00:58,038 - #12 =
INFO  19:00:58,038 - #15 10
INFO  19:00:58,038 - #5 ;
INFO  19:00:58,038 - #18 int
INFO  19:00:58,041 - #18 size
INFO  19:00:58,041 - #21 [
INFO  19:00:58,041 - #22 ]
INFO  19:00:58,041 - #5 ;
INFO  19:00:58,047 - #24 class
INFO  19:00:58,049 - #18 Table
INFO  19:00:58,049 - #3 {
INFO  19:00:58,053 - #18 int
INFO  19:00:58,055 - #18 pos
INFO  19:00:58,056 - #21 [
INFO  19:00:58,056 - #22 ]
INFO  19:00:58,068 - #8 ,
INFO  19:00:58,068 - #18 neg
INFO  19:00:58,068 - #21 [
INFO  19:00:58,068 - #22 ]
INFO  19:00:58,069 - #8 ,
INFO  19:00:58,069 - #18 factor
INFO  19:00:58,069 - #5 ;
INFO  19:00:58,071 - #3 {
INFO  19:00:58,072 - #18 int
INFO  19:00:58,074 - #18 Table
INFO  19:00:58,074 - #6 (
INFO  19:00:58,074 - #18 int
INFO  19:00:58,074 - #18 factor
INFO  19:00:58,074 - #7 )
INFO  19:00:58,076 - #3 {
INFO  19:00:58,076 - #18 this
INFO  19:00:58,078 - #35 .
INFO  19:00:58,079 - #18 factor
INFO  19:00:58,079 - #12 =
INFO  19:00:58,079 - #18 factor
INFO  19:00:58,081 - #5 ;
INFO  19:00:58,081 - #4 }
INFO  19:00:58,082 - #13 void
INFO  19:00:58,084 - #18 putp
INFO  19:00:58,084 - #6 (
INFO  19:00:58,084 - #18 int
INFO  19:00:58,084 - #18 a
INFO  19:00:58,084 - #8 ,
INFO  19:00:58,084 - #18 int
INFO  19:00:58,084 - #18 idx
INFO  19:00:58,084 - #7 )
INFO  19:00:58,085 - #3 {
INFO  19:00:58,085 - #18 this
INFO  19:00:58,085 - #35 .
INFO  19:00:58,085 - #18 pos
INFO  19:00:58,085 - #21 [
INFO  19:00:58,085 - #18 idx
INFO  19:00:58,085 - #22 ]
INFO  19:00:58,085 - #12 =
INFO  19:00:58,085 - #18 a
INFO  19:00:58,085 - #5 ;
INFO  19:00:58,085 - #4 }
INFO  19:00:58,086 - #13 void
INFO  19:00:58,086 - #18 putn
INFO  19:00:58,086 - #6 (
INFO  19:00:58,086 - #18 int
INFO  19:00:58,086 - #18 a
INFO  19:00:58,086 - #8 ,
INFO  19:00:58,086 - #18 int
INFO  19:00:58,086 - #18 idx
INFO  19:00:58,086 - #7 )
INFO  19:00:58,086 - #3 {
INFO  19:00:58,086 - #18 this
INFO  19:00:58,086 - #35 .
INFO  19:00:58,086 - #18 neg
INFO  19:00:58,086 - #21 [
INFO  19:00:58,086 - #18 idx
INFO  19:00:58,086 - #22 ]
INFO  19:00:58,086 - #12 =
INFO  19:00:58,087 - #18 a
INFO  19:00:58,087 - #5 ;
INFO  19:00:58,087 - #4 }
INFO  19:00:58,087 - #18 int
INFO  19:00:58,087 - #18 getp
INFO  19:00:58,087 - #6 (
INFO  19:00:58,087 - #18 int
INFO  19:00:58,087 - #18 idx
INFO  19:00:58,087 - #7 )
INFO  19:00:58,087 - #3 {
INFO  19:00:58,087 - #10 return
INFO  19:00:58,087 - #18 pos
INFO  19:00:58,087 - #21 [
INFO  19:00:58,087 - #18 idx
INFO  19:00:58,087 - #22 ]
INFO  19:00:58,087 - #5 ;
INFO  19:00:58,088 - #4 }
INFO  19:00:58,088 - #18 int
INFO  19:00:58,088 - #18 getn
INFO  19:00:58,088 - #6 (
INFO  19:00:58,088 - #18 int
INFO  19:00:58,088 - #18 idx
INFO  19:00:58,088 - #7 )
INFO  19:00:58,088 - #3 {
INFO  19:00:58,088 - #10 return
INFO  19:00:58,088 - #18 neg
INFO  19:00:58,089 - #21 [
INFO  19:00:58,089 - #18 idx
INFO  19:00:58,089 - #22 ]
INFO  19:00:58,089 - #5 ;
INFO  19:00:58,089 - #4 }
INFO  19:00:58,089 - #4 }
INFO  19:00:58,089 - #4 }
INFO  19:00:58,090 - #18 Table
INFO  19:00:58,092 - #18 val
INFO  19:00:58,092 - #5 ;
INFO  19:00:58,092 - #18 Int
INFO  19:00:58,093 - #18 rows
INFO  19:00:58,093 - #8 ,
INFO  19:00:58,093 - #18 columns
INFO  19:00:58,093 - #5 ;
INFO  19:00:58,093 - #3 {
INFO  19:00:58,093 - #13 void
INFO  19:00:58,093 - #18 f
INFO  19:00:58,093 - #6 (
INFO  19:00:58,093 - #18 char
INFO  19:00:58,093 - #18 ch
INFO  19:00:58,093 - #8 ,
INFO  19:00:58,093 - #18 int
INFO  19:00:58,093 - #18 a
INFO  19:00:58,093 - #8 ,
INFO  19:00:58,094 - #18 int
INFO  19:00:58,094 - #18 arg
INFO  19:00:58,094 - #7 )
INFO  19:00:58,094 - #18 int
INFO  19:00:58,094 - #18 x
INFO  19:00:58,094 - #5 ;
INFO  19:00:58,094 - #3 {
INFO  19:00:58,094 - #18 x
INFO  19:00:58,094 - #12 =
INFO  19:00:58,094 - #18 arg
INFO  19:00:58,094 - #5 ;
INFO  19:00:58,094 - #4 }
INFO  19:00:58,094 - #13 void
INFO  19:00:58,094 - #18 main
INFO  19:00:58,094 - #6 (
INFO  19:00:58,094 - #7 )
INFO  19:00:58,096 - #18 int
INFO  19:00:58,096 - #18 x
INFO  19:00:58,096 - #8 ,
INFO  19:00:58,096 - #18 i
INFO  19:00:58,096 - #5 ;
INFO  19:00:58,096 - #18 char
INFO  19:00:58,096 - #18 c
INFO  19:00:58,096 - #5 ;
INFO  19:00:58,097 - #18 int
INFO  19:00:58,097 - #18 arr
INFO  19:00:58,097 - #21 [
INFO  19:00:58,097 - #22 ]
INFO  19:00:58,097 - #5 ;
INFO  19:00:58,097 - #3 {
INFO  19:00:58,097 - #18 val
INFO  19:00:58,097 - #12 =
INFO  19:00:58,097 - #38 new
INFO  19:00:58,097 - #18 Table
INFO  19:00:58,097 - #6 (
INFO  19:00:58,097 - #15 2
INFO  19:00:58,097 - #7 )
INFO  19:00:58,097 - #5 ;
INFO  19:00:58,097 - #18 arr
INFO  19:00:58,097 - #12 =
INFO  19:00:58,097 - #38 new
INFO  19:00:58,097 - #18 int
INFO  19:00:58,097 - #21 [
INFO  19:00:58,097 - #15 3
INFO  19:00:58,097 - #22 ]
INFO  19:00:58,097 - #5 ;
INFO  19:00:58,097 - #18 i
INFO  19:00:58,097 - #12 =
INFO  19:00:58,098 - #15 0
INFO  19:00:58,098 - #5 ;
INFO  19:00:58,098 - #41 while
INFO  19:00:58,098 - #6 (
INFO  19:00:58,098 - #18 i
INFO  19:00:58,098 - #33 <
INFO  19:00:58,098 - #15 3
INFO  19:00:58,101 - #7 )
INFO  19:00:58,101 - #3 {
INFO  19:00:58,101 - #18 arr
INFO  19:00:58,101 - #21 [
INFO  19:00:58,101 - #18 i
INFO  19:00:58,101 - #22 ]
INFO  19:00:58,101 - #12 =
INFO  19:00:58,101 - #18 i
INFO  19:00:58,101 - #5 ;
INFO  19:00:58,102 - #18 i
INFO  19:00:58,102 - #39 ++
INFO  19:00:58,102 - #5 ;
INFO  19:00:58,104 - #4 }
INFO  19:00:58,104 - #18 arr
INFO  19:00:58,104 - #35 .
INFO  19:00:58,104 - #43 foreach
INFO  19:00:58,104 - #6 (
INFO  19:00:58,104 - #18 x
INFO  19:00:58,104 - #42 =>
INFO  19:00:58,104 - #9 print
INFO  19:00:58,104 - #6 (
INFO  19:00:58,104 - #18 x
INFO  19:00:58,104 - #7 )
INFO  19:00:58,105 - #5 ;
INFO  19:00:58,105 - #7 )
INFO  19:00:58,105 - #5 ;
INFO  19:00:58,105 - #18 val
INFO  19:00:58,105 - #35 .
INFO  19:00:58,105 - #18 pos
INFO  19:00:58,105 - #12 =
INFO  19:00:58,105 - #38 new
INFO  19:00:58,105 - #18 int
INFO  19:00:58,105 - #21 [
INFO  19:00:58,105 - #18 size
INFO  19:00:58,105 - #22 ]
INFO  19:00:58,105 - #5 ;
INFO  19:00:58,105 - #18 val
INFO  19:00:58,105 - #35 .
INFO  19:00:58,105 - #18 neg
INFO  19:00:58,105 - #12 =
INFO  19:00:58,105 - #38 new
INFO  19:00:58,105 - #18 int
INFO  19:00:58,105 - #21 [
INFO  19:00:58,105 - #18 size
INFO  19:00:58,105 - #22 ]
INFO  19:00:58,105 - #5 ;
INFO  19:00:58,105 - #44 read
INFO  19:00:58,105 - #6 (
INFO  19:00:58,105 - #18 x
INFO  19:00:58,105 - #7 )
INFO  19:00:58,105 - #5 ;
INFO  19:00:58,105 - #21 [
INFO  19:00:58,105 - #18 i
INFO  19:00:58,105 - #8 ,
INFO  19:00:58,105 - #8 ,
INFO  19:00:58,108 - #18 x
INFO  19:00:58,108 - #22 ]
INFO  19:00:58,108 - #12 =
INFO  19:00:58,108 - #18 arr
INFO  19:00:58,108 - #5 ;
INFO  19:00:58,108 - #41 while
INFO  19:00:58,108 - #6 (
INFO  19:00:58,108 - #18 i
INFO  19:00:58,108 - #33 <
INFO  19:00:58,108 - #18 size
INFO  19:00:58,108 - #7 )
INFO  19:00:58,108 - #3 {
INFO  19:00:58,108 - #18 val
INFO  19:00:58,108 - #35 .
INFO  19:00:58,108 - #18 putp
INFO  19:00:58,108 - #6 (
INFO  19:00:58,108 - #15 0
INFO  19:00:58,108 - #8 ,
INFO  19:00:58,108 - #18 i
INFO  19:00:58,108 - #7 )
INFO  19:00:58,108 - #5 ;
INFO  19:00:58,109 - #18 val
INFO  19:00:58,109 - #35 .
INFO  19:00:58,109 - #18 putn
INFO  19:00:58,109 - #6 (
INFO  19:00:58,109 - #15 0
INFO  19:00:58,109 - #8 ,
INFO  19:00:58,109 - #18 i
INFO  19:00:58,109 - #7 )
INFO  19:00:58,109 - #5 ;
INFO  19:00:58,109 - #18 i
INFO  19:00:58,109 - #39 ++
INFO  19:00:58,109 - #5 ;
INFO  19:00:58,109 - #4 }
INFO  19:00:58,109 - #18 f
INFO  19:00:58,109 - #6 (
INFO  19:00:58,109 - #18 c
INFO  19:00:58,109 - #8 ,
INFO  19:00:58,109 - #18 x
INFO  19:00:58,109 - #8 ,
INFO  19:00:58,109 - #18 i
INFO  19:00:58,109 - #7 )
INFO  19:00:58,109 - #5 ;
INFO  19:00:58,109 - #44 read
INFO  19:00:58,109 - #6 (
INFO  19:00:58,109 - #18 rows
INFO  19:00:58,109 - #7 )
INFO  19:00:58,109 - #5 ;
INFO  19:00:58,109 - #18 x
INFO  19:00:58,109 - #12 =
INFO  19:00:58,109 - #18 rows
INFO  19:00:58,109 - #5 ;
INFO  19:00:58,109 - #41 while
INFO  19:00:58,109 - #6 (
INFO  19:00:58,109 - #17 true
INFO  19:00:58,109 - #7 )
INFO  19:00:58,110 - #3 {
INFO  19:00:58,110 - #19 if
INFO  19:00:58,110 - #6 (
INFO  19:00:58,110 - #15 0
INFO  19:00:58,110 - #34 <=
INFO  19:00:58,110 - #18 x
INFO  19:00:58,110 - #36 &&
INFO  19:00:58,110 - #18 x
INFO  19:00:58,110 - #33 <
INFO  19:00:58,110 - #18 size
INFO  19:00:58,110 - #7 )
INFO  19:00:58,110 - #3 {
INFO  19:00:58,110 - #19 if
INFO  19:00:58,110 - #6 (
INFO  19:00:58,110 - #18 x
INFO  19:00:58,110 - #34 <=
INFO  19:00:58,110 - #15 0
INFO  19:00:58,110 - #7 )
INFO  19:00:58,110 - #45 break
INFO  19:00:58,110 - #5 ;
INFO  19:00:58,110 - #18 val
INFO  19:00:58,112 - #35 .
INFO  19:00:58,112 - #18 putp
INFO  19:00:58,112 - #6 (
INFO  19:00:58,112 - #18 val
INFO  19:00:58,112 - #35 .
INFO  19:00:58,112 - #18 getp
INFO  19:00:58,112 - #6 (
INFO  19:00:58,112 - #18 x
INFO  19:00:58,112 - #7 )
INFO  19:00:58,112 - #11 +
INFO  19:00:58,112 - #15 1
INFO  19:00:58,115 - #7 )
INFO  19:00:58,116 - #5 ;
INFO  19:00:58,116 - #4 }
INFO  19:00:58,116 - #20 else
INFO  19:00:58,116 - #19 if
INFO  19:00:58,116 - #6 (
INFO  19:00:58,116 - #18 size
INFO  19:00:58,116 - #33 <
INFO  19:00:58,116 - #18 x
INFO  19:00:58,116 - #36 &&
INFO  19:00:58,116 - #18 x
INFO  19:00:58,116 - #33 <
INFO  19:00:58,116 - #15 0
INFO  19:00:58,116 - #7 )
INFO  19:00:58,116 - #3 {
INFO  19:00:58,116 - #18 val
INFO  19:00:58,116 - #35 .
INFO  19:00:58,116 - #18 putn
INFO  19:00:58,116 - #6 (
INFO  19:00:58,116 - #18 val
INFO  19:00:58,116 - #35 .
INFO  19:00:58,116 - #18 getn
INFO  19:00:58,116 - #6 (
INFO  19:00:58,116 - #25 -
INFO  19:00:58,116 - #18 x
INFO  19:00:58,116 - #7 )
INFO  19:00:58,116 - #11 +
INFO  19:00:58,116 - #15 1
INFO  19:00:58,116 - #7 )
INFO  19:00:58,116 - #5 ;
INFO  19:00:58,116 - #4 }
INFO  19:00:58,116 - #44 read
INFO  19:00:58,116 - #6 (
INFO  19:00:58,116 - #18 x
INFO  19:00:58,116 - #7 )
INFO  19:00:58,116 - #5 ;
INFO  19:00:58,116 - #4 }
INFO  19:00:58,116 - #4 }
INFO  19:00:58,116 - #4 }
