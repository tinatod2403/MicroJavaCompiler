// generated with ast extension for cup
// version 0.8
// 24/7/2023 20:47:37


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(Mulop Mulop);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(ExprNumConstHlp ExprNumConstHlp);
    public void visit(DesignatorOrNoDesig DesignatorOrNoDesig);
    public void visit(Var Var);
    public void visit(ExtendsTypeHlp ExtendsTypeHlp);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(FormParsOrNot FormParsOrNot);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(Designator Designator);
    public void visit(ExprOrNoExpr ExprOrNoExpr);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(ActParsList ActParsList);
    public void visit(ConstrMethHlp ConstrMethHlp);
    public void visit(SQRBrackets SQRBrackets);
    public void visit(ExprList ExprList);
    public void visit(GlobDeclList GlobDeclList);
    public void visit(ConstDeclItem ConstDeclItem);
    public void visit(DesignatorStatementItem DesignatorStatementItem);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorList DesignatorList);
    public void visit(ExprActParsHlp ExprActParsHlp);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Sub Sub);
    public void visit(Add Add);
    public void visit(LessEqual LessEqual);
    public void visit(LessThan LessThan);
    public void visit(GreaterEqual GreaterEqual);
    public void visit(GreaterThan GreaterThan);
    public void visit(NotEqual NotEqual);
    public void visit(IsEqual IsEqual);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(FactorActPars FactorActPars);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactExpr FactExpr);
    public void visit(FuncCall FuncCall);
    public void visit(VarDesig VarDesig);
    public void visit(FactNewInstance FactNewInstance);
    public void visit(FactBoolConst FactBoolConst);
    public void visit(FactCharConst FactCharConst);
    public void visit(FactNumConst FactNumConst);
    public void visit(TermSingle TermSingle);
    public void visit(TermMulti TermMulti);
    public void visit(ExprSingle ExprSingle);
    public void visit(ExprSingleMinus ExprSingleMinus);
    public void visit(ExprMulti ExprMulti);
    public void visit(NoExpr NoExpr);
    public void visit(ExprExists ExprExists);
    public void visit(CondFactExprRelop CondFactExprRelop);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(CondTermSingle CondTermSingle);
    public void visit(CondTermMulti CondTermMulti);
    public void visit(ConditionSingle ConditionSingle);
    public void visit(ConditionMulti ConditionMulti);
    public void visit(ActParsListSingle ActParsListSingle);
    public void visit(ActParsListMulti ActParsListMulti);
    public void visit(NoActuals NoActuals);
    public void visit(ActParsExists ActParsExists);
    public void visit(NoDesignator NoDesignator);
    public void visit(DesignatorExists DesignatorExists);
    public void visit(DesignatorHlp DesignatorHlp);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorSingle DesignatorSingle);
    public void visit(DesignatorListSingle DesignatorListSingle);
    public void visit(DesignatorListMulti DesignatorListMulti);
    public void visit(DsgnStmtItemDecr DsgnStmtItemDecr);
    public void visit(DsgnStmtItemIncr DsgnStmtItemIncr);
    public void visit(DsgnStmtItemActPars DsgnStmtItemActPars);
    public void visit(DsgnStmtAssignopErr DsgnStmtAssignopErr);
    public void visit(DsgnStmtFindAny DsgnStmtFindAny);
    public void visit(DsgnStmtAssignop DsgnStmtAssignop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ExprNumConstHelper ExprNumConstHelper);
    public void visit(ExprHelper ExprHelper);
    public void visit(IfStmt IfStmt);
    public void visit(IfElseStmt IfElseStmt);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(BreakStmt BreakStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(ForEachStmt ForEachStmt);
    public void visit(MultipleStmt MultipleStmt);
    public void visit(WhileStmt WhileStmt);
    public void visit(PrintStmt PrintStmt);
    public void visit(ReturnStmt ReturnStmt);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(NoStmt NoStmt);
    public void visit(StatementListExists StatementListExists);
    public void visit(Type Type);
    public void visit(FormPar FormPar);
    public void visit(FormParsSingle FormParsSingle);
    public void visit(FormParsMulti FormParsMulti);
    public void visit(NoFormPars NoFormPars);
    public void visit(FormParsExists FormParsExists);
    public void visit(MethodVoid MethodVoid);
    public void visit(MethodType MethodType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclListExists MethodDeclListExists);
    public void visit(NoConstMethHelper NoConstMethHelper);
    public void visit(ConstrMethHlpExists ConstrMethHlpExists);
    public void visit(NoExtendsTypeHelper NoExtendsTypeHelper);
    public void visit(ExtendsTypeHlpExists ExtendsTypeHlpExists);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(VarDeclListExists VarDeclListExists);
    public void visit(NoVarList NoVarList);
    public void visit(VarListExistsErr VarListExistsErr);
    public void visit(VarListExists VarListExists);
    public void visit(NoSQRBrackets NoSQRBrackets);
    public void visit(SQRBracketsExist SQRBracketsExist);
    public void visit(VarNoBrackets VarNoBrackets);
    public void visit(VarBracketsExist VarBracketsExist);
    public void visit(VarDeclErr VarDeclErr);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclItemBool ConstDeclItemBool);
    public void visit(ConstDeclItemChar ConstDeclItemChar);
    public void visit(ConstDeclItemNum ConstDeclItemNum);
    public void visit(ConstDeclListSingle ConstDeclListSingle);
    public void visit(ConstDeclListMulti ConstDeclListMulti);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoGlobDecl NoGlobDecl);
    public void visit(GlobDeclClass GlobDeclClass);
    public void visit(GlobDeclVar GlobDeclVar);
    public void visit(GlobDeclConst GlobDeclConst);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
